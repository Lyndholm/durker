import json
from asyncio import TimeoutError
from datetime import datetime
from typing import Optional

from discord import Color, Embed
from discord.ext.commands import Cog, command, dm_only, guild_only, is_owner
from discord.ext.menus import ListPageSource, MenuPages
from discord.utils import get
from loguru import logger

from ..db import db
from ..utils.paginator import Paginator
from ..utils.utils import edit_user_reputation, load_commands_from_json

cmd = load_commands_from_json('purchases_handler')


class VbucksPurchasesMenu(ListPageSource):
    def __init__(self, ctx, data):
        self.ctx = ctx

        super().__init__(data, per_page=5)

    async def write_page(self, menu, offset, fields=[]):
        len_data = len(self.entries)
        embed = Embed(title='üõçÔ∏è –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫',color=Color.blue(), timestamp=datetime.utcnow())
        embed.set_footer(text=f'{offset:,} - {min(len_data, offset+self.per_page-1):,} –∏–∑ {len_data:,}')
        embed.set_thumbnail(url='https://cdn.discordapp.com/emojis/640675233342291969.png')

        for name, value in fields:
            embed.add_field(name=name, value=value, inline=False)

        return embed

    async def format_page(self, menu, entries):
        offset = (menu.current_page*self.per_page) + 1

        fields = []
        table = '‚†Ä' + ('\n'.join(f'\n> **{entry[0]}** \n> **–¶–µ–Ω–∞:** {entry[1]}\n> **–î–∞—Ç–∞:** {entry[2][:-3]}'
                for idx, entry in enumerate(entries)))

        fields.append(('–°–ø–∏—Å–æ–∫ –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø–æ–∫—É–ø–æ–∫ –∑–∞ –í-–ë–∞–∫—Å—ã.', table))

        return await self.write_page(menu, offset, fields)

class RealMoneyPurchasesMenu(ListPageSource):
    def __init__(self, ctx, data):
        self.ctx = ctx

        super().__init__(data, per_page=5)

    async def write_page(self, menu, offset, fields=[]):
        len_data = len(self.entries)
        embed = Embed(title='üí∏ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫',color=Color.green(), timestamp=datetime.utcnow())
        embed.set_footer(text=f'{offset:,} - {min(len_data, offset+self.per_page-1):,} –∏–∑ {len_data:,}')
        embed.set_thumbnail(url='https://cdn.discordapp.com/emojis/718071523524739074.gif')

        for name, value in fields:
            embed.add_field(name=name, value=value, inline=False)

        return embed

    async def format_page(self, menu, entries):
        offset = (menu.current_page*self.per_page) + 1

        fields = []
        table = '‚†Ä' + ('\n'.join(f'\n> **{entry[0]}** \n> **–¶–µ–Ω–∞:** {entry[1]}\n> **–î–∞—Ç–∞:** {entry[2][:-3]}'
                for idx, entry in enumerate(entries)))

        fields.append(('–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫, —Å–æ–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏.', table))

        return await self.write_page(menu, offset, fields)


class PurchasesHandler(Cog, name='–ü–æ–∫—É–ø–∫–∏ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ'):
    def __init__(self, bot):
        self.bot = bot

    async def check_support_roles(self, member):
        purchases = db.fetchone(['purchases'], 'users_stats', 'user_id', member.id)[0]
        vbucks_count = sum(purchases['vbucks_purchases'][i]['price'] for i in range(len(purchases['vbucks_purchases'])))

        mecenat = get(self.bot.guild.roles, id=731241570967486505)
        kapitalist = get(self.bot.guild.roles, id=730017005029294121)
        magnat = get(self.bot.guild.roles, id=774686818356428841)

        if mecenat not in member.roles:
            await member.add_roles(mecenat)
            edit_user_reputation(member.id, '+', 100)
        if kapitalist not in member.roles and vbucks_count >= 10000:
            await member.add_roles(kapitalist)
            edit_user_reputation(member.id, '+', 1000)
        if magnat not in member.roles and vbucks_count >= 25000:
            await member.add_roles(magnat)
            edit_user_reputation(member.id, '+', 2500)

    @command(name=cmd["addvbucks"]["name"], aliases=cmd["addvbucks"]["aliases"],
            brief=cmd["addvbucks"]["brief"],
            description=cmd["addvbucks"]["description"],
            usage=cmd["addvbucks"]["usage"],
            help=cmd["addvbucks"]["help"],
            hidden=cmd["addvbucks"]["hidden"], enabled=True)
    @dm_only()
    @is_owner()
    @logger.catch
    async def addvbucks_command(self, ctx, user_id: int, amount: int, *, item: Optional[str] = '–ù–µ —É–∫–∞–∑–∞–Ω–æ'):
        member = self.bot.guild.get_member(user_id)
        purchases = db.fetchone(['purchases'], 'users_stats', 'user_id', user_id)[0]
        transaction = {
            'id': len(purchases['vbucks_purchases'])+1,
            'item': item,
            'price': amount,
            'date': datetime.now().strftime('%d.%m.%Y %H:%M:%S')
        }
        purchases['vbucks_purchases'].append(transaction)
        db.execute("UPDATE users_stats SET purchases = %s WHERE user_id = %s",
                   json.dumps(purchases), user_id)
        db.commit()
        await self.check_support_roles(member)
        await ctx.reply(embed=Embed(
            title='–í-–ë–∞–∫—Å—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã',
            color=member.color,
            timestamp=datetime.utcnow(),
            description= '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —Å —Ç–µ–≥–æ–º –í-–ë–∞–∫—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '
                        f'**{member.display_name}** ({member.mention}) –±—ã–ª–æ —É–≤–µ–ª–∏—á–µ–Ω–æ –Ω–∞ **{amount}**.'
        ))


    @command(name=cmd["addrubles"]["name"], aliases=cmd["addrubles"]["aliases"],
            brief=cmd["addrubles"]["brief"],
            description=cmd["addrubles"]["description"],
            usage=cmd["addrubles"]["usage"],
            help=cmd["addrubles"]["help"],
            hidden=cmd["addrubles"]["hidden"], enabled=True)
    @dm_only()
    @is_owner()
    @logger.catch
    async def addrubles_command(self, ctx, user_id: int, amount: int, *, item: Optional[str] = '–ù–µ —É–∫–∞–∑–∞–Ω–æ'):
        member = self.bot.guild.get_member(user_id)
        purchases = db.fetchone(['purchases'], 'users_stats', 'user_id', user_id)[0]
        transaction = {
            'id': len(purchases['realMoney_purchases'])+1,
            'item': item,
            'price': amount,
            'date': datetime.now().strftime('%d.%m.%Y %H:%M:%S')
        }
        purchases['realMoney_purchases'].append(transaction)
        db.execute("UPDATE users_stats SET purchases = %s WHERE user_id = %s",
                   json.dumps(purchases), user_id)
        db.commit()
        await ctx.reply(embed=Embed(
            title='–†—É–±–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã',
            color=member.color,
            timestamp=datetime.utcnow(),
            description= f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member.display_name}**'
                        f'({member.mention}) –±—ã–ª–æ —É–≤–µ–ª–∏—á–µ–Ω–æ –Ω–∞ **{amount}**.'
        ))


    @command(name=cmd["resetpurchases"]["name"], aliases=cmd["resetpurchases"]["aliases"],
            brief=cmd["resetpurchases"]["brief"],
            description=cmd["resetpurchases"]["description"],
            usage=cmd["resetpurchases"]["usage"],
            help=cmd["resetpurchases"]["help"],
            hidden=cmd["resetpurchases"]["hidden"], enabled=True)
    @dm_only()
    @is_owner()
    @logger.catch
    async def reset_user_purchases_command(self, ctx, user_id: int, reason: Optional[str] = '–ù–µ —É–∫–∞–∑–∞–Ω–∞'):
        data = db.fetchone(['purchases'], 'users_stats', 'user_id', user_id)[0]
        data['reason'] = reason
        time_now = datetime.now().strftime("%d.%m.%Y %H.%M.%S")
        with open(f"./data/purchases_backup/{user_id} [{time_now}].json", "w") as f:
            json.dump(data, f, indent=2, sort_keys=True, ensure_ascii=False)

        purchases = {"vbucks_purchases":[],"realMoney_purchases":[]}
        db.execute("UPDATE users_stats SET purchases = %s WHERE user_id = %s",
                   json.dumps(purchases), user_id)
        db.commit()
        await ctx.message.add_reaction('‚úÖ')


    @command(name=cmd["purchases"]["name"], aliases=cmd["purchases"]["aliases"],
            brief=cmd["purchases"]["brief"],
            description=cmd["purchases"]["description"],
            usage=cmd["purchases"]["usage"],
            help=cmd["purchases"]["help"],
            hidden=cmd["purchases"]["hidden"], enabled=True)
    @guild_only()
    @logger.catch
    async def fetch_purchases_command(self, ctx):
        reactions = ['1Ô∏è‚É£', '2Ô∏è‚É£']
        embed = Embed(
            title='üí± –í—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã',
            color=ctx.author.color,
            timestamp=datetime.utcnow(),
            description='**–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∫—É–ø–∫–∏ –≤ –∫–∞–∫–æ–π –≤–∞–ª—é—Ç–µ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å:\n\n'
                        '1Ô∏è‚É£ ‚Äî –ø–æ–∫—É–ø–∫–∏ –∑–∞ –í-–ë–∞–∫—Å—ã.\n2Ô∏è‚É£ ‚Äî –ø–æ–∫—É–ø–∫–∏ –∑–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ (—Ä—É–±–ª–∏).**'
        )
        message = await ctx.send(embed=embed)
        for r in reactions:
            await message.add_reaction(r)
        try:
            currency, user = await self.bot.wait_for(
                'reaction_add', timeout=120.0,
                check=lambda currency, user: user == ctx.author
                and currency.message.channel == ctx.channel
                and currency.emoji in reactions)
        except TimeoutError:
            await message.clear_reactions()
            return

        currency = "vbucks" if str(currency.emoji) == '1Ô∏è‚É£' else "rubles"

        if currency == "vbucks":
            purchases = db.fetchone(['purchases'], 'users_stats', 'user_id', ctx.author.id)[0]['vbucks_purchases']
            data = [tuple(list(item.values())[1:]) for item in purchases]
            menu = MenuPages(source=VbucksPurchasesMenu(ctx, data), clear_reactions_after=True)
        else:
            purchases = db.fetchone(['purchases'], 'users_stats', 'user_id', ctx.author.id)[0]['realMoney_purchases']
            data = [tuple(list(item.values())[1:]) for item in purchases]
            menu = MenuPages(source=RealMoneyPurchasesMenu(ctx, data), clear_reactions_after=True)

        if purchases:
            await message.delete()
            await menu.start(ctx)
        else:
            await message.clear_reactions()
            await message.edit(content=f'{ctx.author.mention}, —É –≤–∞—Å –Ω–µ—Ç –ø–æ–∫—É–ø–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º. '
                f'–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ `{ctx.prefix or self.bot.PREFIX}faq`', embed=None)


    @command(name=cmd["faq"]["name"], aliases=cmd["faq"]["aliases"],
            brief=cmd["faq"]["brief"],
            description=cmd["faq"]["description"],
            usage=cmd["faq"]["usage"],
            help=cmd["faq"]["help"],
            hidden=cmd["faq"]["hidden"], enabled=True)
    @guild_only()
    async def faq_command(self, ctx):
        embeds = []
        embeds.append(Embed(
            title='üõçÔ∏è –û –ø–æ–∫—É–ø–∫–∞—Ö –∏ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏—Ö –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è',
            color=0x408FE1,
            timestamp=datetime.utcnow(),
            description= \
            '‚†Ä\n'
            '> **–°–¥–µ–ª–∞–ª –ø–æ–∫—É–ø–∫—É —Å –≤–∞—à–∏–º —Ç–µ–≥–æ–º. –ö—É–¥–∞ –ø—Ä–∏—Å–ª–∞—Ç—å —Ñ–æ—Ç–æ?**\n\n'
            '> **–ü—Ä–∏—Å–ª–∞–ª —Å–∫—Ä–∏–Ω—à–æ—Ç/–≤–∏–¥–µ–æ —Å –ø–æ–∫—É–ø–∫–æ–π, –Ω–æ –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å. –ü–æ—á–µ–º—É?**\n\n'
            '> **–ü–æ—á–µ–º—É –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞?**\n\n'
            '> **–ö–∞–∫–æ–≤—ã –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–æ–∫?**\n\n'
            '**–û—Ç–≤–µ—Ç—ã –Ω–∞ —ç—Ç–∏ (–∏ –Ω–µ —Ç–æ–ª—å–∫–æ) –≤–æ–ø—Ä–æ—Å—ã –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –≤ —ç—Ç–æ–º –º–µ–Ω—é.**'
        ).set_image(url='https://cdn.discordapp.com/attachments/774698479981297664/835805462716743690/unknown.png'))

        embeds.append(Embed(
            title='ü§î –ö—É–¥–∞ –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ñ–æ—Ç–æ –ø–æ–∫—É–ø–æ–∫ —Å —Ç–µ–≥–æ–º?',
            color=ctx.author.color,
            timestamp=datetime.utcnow(),
            description= \
            'ü™ô –°–æ–≤–µ—Ä—à–∏–ª–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ–∫—É–ø–∫—É —Å –Ω–∞—à–∏–º —Ç–µ–≥–æ–º –∞–≤—Ç–æ—Ä–∞? '
            '–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç/–≤–∏–¥–µ–æ –≤ <#546408250158088192> '
            '(–Ω–æ–≤–∏—á–∫–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–Ω–∞–ª–∞, '
            ' –Ω–æ —ç—Ç–æ –Ω–µ –ø–æ–º–µ—Ö–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–∫—Ä–∏–Ω–æ–≤). '
            '–ó–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –≤–∞–º –¥–æ—Å—Ç–∞–Ω–µ—Ç—Å—è —Ä–æ–ª—å <@&731241570967486505>\n'
            '–ü–æ—Ç—Ä–∞—Ç–∏–≤ —Å —Ç–µ–≥–æ–º **10 000** –∏ **25 000** –í-–ë–∞–∫—Å–æ–≤, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ä–æ–ª—å '
            '<@&730017005029294121> –∏ <@&774686818356428841> —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.\n\n'
            'üí∏ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å—Ç–∞—Ä—Ç–µ—Ä –ø–∞–∫–∏ –∏ –ø—Ä–æ—á–∏–µ –ø–ª–∞—Ç–Ω—ã–µ –Ω–∞–±–æ—Ä—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –í-–ë–∞–∫—Å—ã, '
            '–Ω–µ —Å—á–∏—Ç–∞—é—Ç—Å—è –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∞–≤—Ç–æ—Ä–∞. –¢–∞–∫–æ–≤—ã –ø—Ä–∞–≤–∏–ª–∞ Epic Games. –û–¥–Ω–∞–∫–æ —ç—Ç–æ '
            '–Ω–µ –º–µ—à–∞–µ—Ç –≤–∞–º –ø—Ä–∏—Å–ª–∞—Ç—å —Å–∫—Ä–∏–Ω —Ç–∞–∫–æ–π –ø–æ–∫—É–ø–∫–∏ –≤ <#546408250158088192>, –Ω–æ '
            '–≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ä–æ–ª—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ. –ü–æ–¥–æ–±–Ω–∞—è –ø–æ–∫—É–ø–∫–∞ –±—É–¥–µ—Ç '
            '–∑–∞—Å—á–∏—Ç–∞–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ, –æ–Ω–∞ –Ω–µ –æ—Ç—Ä–∞–∑–∏—Ç—Å—è –Ω–∞ —Å—á—ë—Ç—á–∏–∫–µ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö —Å '
            '—Ç–µ–≥–æ–º –í-–ë–∞–∫—Å–æ–≤.'
        ))

        embeds.append(Embed(
            title='üòï –ü–æ—á–µ–º—É –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å?',
            color=ctx.author.color,
            timestamp=datetime.utcnow(),
            description= \
            '–ï—Å—Ç—å –¥–≤–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –ø–æ–∫—É–ø–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∑–∞—Å—á–∏—Ç–∞–Ω–∞.\n\n'
            '**1.** *–ü–æ–∫—É–ø–∫–∞ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –Ω–µ–π –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.*\n'
            '–£–∑–Ω–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ –º–æ–∂–Ω–æ –Ω–∞ –æ–¥–Ω–æ–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç—Ä–∞–Ω–∏—Ü.\n\n'
            '**2.** *–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç–æ—Ä.*\n'
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –≤—Å–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –∏ –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è '
            '**–≤—Ä—É—á–Ω—É—é**. –í—Ä–µ–º—è –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –º–æ–∂–µ—Ç —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å –æ—Ç –ø–∞—Ä—ã –º–∏–Ω—É—Ç –¥–æ '
            '–Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –¥–Ω–µ–π. –≠—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.\n–í '
            '—Å–ª—É—á–∞–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤–∞—Å –º–æ–≥—É—Ç –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É, '
            '–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã/–≤–∏–¥–µ–æ.'
        ))

        embeds.append(Embed(
            title='üò• –ü–æ—á–µ–º—É –º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞?',
            color=ctx.author.color,
            timestamp=datetime.utcnow(),
            description= \
            '–ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ —Å—Ç–æ–∏—Ç –∑–Ω–∞—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–∫—É–ø–æ–∫ '
            '–Ω–∏–∫—Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç. –î–ª—è —ç—Ç–æ–≥–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–µ—Å–∫–∞—è –ø—Ä–∏—á–∏–Ω–∞. '
            '–ò —Ç–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–æ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏—à—å –æ–¥–Ω–æ ‚Äî –æ–±–º–∞–Ω —Å–æ —Å–∫—Ä–∏–Ω–∞–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n'
            '–ï—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞ '
            '–∑–∞–ø–æ–¥–æ–∑—Ä–∏—Ç –≤–∞—Å –≤ –≤–æ—Ä–æ–≤—Å—Ç–≤–µ —á—É–∂–∏—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤, –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç '
            '—Å–±—Ä–æ—à–µ–Ω–∞ –Ω–∞ –≤—Ä–µ–º—è —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. –ï—Å–ª–∏ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º—ã–π —Å–º–æ–∂–µ—Ç –¥–æ–∫–∞–∑–∞—Ç—å, '
            '—á—Ç–æ –Ω–µ –≤–æ—Ä–æ–≤–∞–ª —Å–∫—Ä–∏–Ω—ã –∏ –Ω–µ –≤—ã–¥–∞–≤–∞–ª –∏—Ö –∑–∞ —Å–≤–æ–∏, –µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ '
            '–≤–µ—Ä–Ω—ë—Ç—Å—è –≤ –ø—Ä–µ–∂–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∑–∞ –æ–±–º–∞–Ω –∏ '
            '–≤–æ—Ä–æ–≤—Å—Ç–≤–æ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n\n'
            '**–í–Ω–∏–º–∞–Ω–∏–µ!** –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç 1 –∏—é–ª—è 2021 –≥. '
            '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫—É–ø–æ–∫ **–≤—Å–µ—Ö** –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±—ã–ª–∞ —Å–±—Ä–æ—à–µ–Ω–∞. '
            '–≠—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ –ø–æ –¥–≤—É–º –ø—Ä–∏—á–∏–Ω–∞–º:\n\n**1.** *–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã '
            '—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.*\n–í –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ v3.0.0 –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ '
            '–ø—Ä–µ—Ç–µ—Ä–ø–µ–ª–∞ —Å–µ—Ä—å–µ–∑–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–∑–≤–æ–ª–∏–ª–∏ '
            '—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ '
            '–ø—Ä–∏—à–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å. –°—á—ë—Ç—á–∏–∫ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –í-–ë–∞–∫—Å–æ–≤ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö.\n\n'
            '**2.** *–ü–æ—è–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–æ–∫.*\n'
            '–í –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è —É—á–∞—Å—Ç–∏–ª–∏—Å—å —Å–ª—É—á–∞–∏ –∫—Ä–∞–∂–∏ —á—É–∂–∏—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ '
            ' –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ù–µ–¥–æ–±—Ä–æ—Å–æ–≤–µ—Å—Ç–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–æ—Ä—É—é—Ç —Ñ–æ—Ç–æ –ø–æ–∫—É–ø–æ–∫ '
            '—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –≤—ã–¥–∞—é—Ç –∏—Ö –∑–∞ —Å–≤–æ–∏. –í —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º –±—ã–ª–æ '
            '—Ä–µ—à–µ–Ω–æ —É–∂–µ—Å—Ç–æ—á–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–æ–∫ –ø—É—Ç—ë–º –≤–≤–µ–¥–µ–Ω–∏—è '
            '–Ω–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª. –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∏–º–∏ –º–æ–∂–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ.'
        ))

        embeds.append(Embed(
            title='üìú –ö–∞–∫–æ–≤—ã –ø—Ä–∞–≤–∏–ª–∞ –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –ø–æ–∫—É–ø–æ–∫?',
            color=ctx.author.color,
            timestamp=datetime.utcnow(),
            description= \
            '**–î–ª—è –∑–∞—Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –≤–Ω—É—Ç—Ä–∏–∏–≥—Ä–æ–≤—ã—Ö –ø–æ–∫—É–ø–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —Å–ª—É–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:**\n\n'
            '> **1.** –ù–∞ —Ñ–æ—Ç–æ –æ—Ç—á—ë—Ç–ª–∏–≤–æ –≤–∏–¥–µ–Ω —Ç–µ–≥ –∞–≤—Ç–æ—Ä–∞ **FNFUN**.\n\n'
            '> **2.** –í–∏–¥–µ–Ω —Å–∞–º —Ñ–∞–∫—Ç –ø–æ–∫—É–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞.\n\n'
            '> **3.** –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–¥–∞—Ä–æ–∫, –Ω–∞ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –Ω–∞–¥–ø–∏—Å—å.\n\n'
            '> **4.** –ï—Å—Ç—å –Ω–∞–¥–ø–∏—Å—å –∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã –ø–æ–∫—É–ø–∫–∏. –≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ '
            '—Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–µ–¥–º–µ—Ç –∫—É–ø–ª–µ–Ω —Ç–æ–ª—å–∫–æ —á—Ç–æ –∏ –∏–º–µ–Ω–Ω–æ —Å –Ω–∞—à–∏–º —Ç–µ–≥–æ–º. | *–ü—Ä–∞–≤–∏–ª–æ '
            '–Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏, —Å—Ç–∞—Ä—Ç–µ—Ä –ø–∞–∫–∏ –∏ –ø—Ä–æ—á–∏–µ –Ω–∞–±–æ—Ä—ã, '
            '–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–≤—Ä–∞—Ç—É –Ω–µ –ø–æ–¥–ª–µ–∂–∞—Ç.*\n\n'
            '> **5.** –ü–æ–∫—É–ø–∫—É –ë–æ–µ–≤–æ–≥–æ –ø—Ä–æ–ø—É—Å–∫–∞ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å, –ø—Ä–∏—Å–ª–∞–≤ 2 —Å–∫—Ä–∏–Ω—à–æ—Ç–∞, '
            '–Ω–∞ –æ–¥–Ω–æ–º –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –≤–∏–¥–µ–Ω —Ñ–∞–∫—Ç –ø–æ–∫—É–ø–∫–∏, –∞ –Ω–∞ –≤—Ç–æ—Ä–æ–º - —Ç–µ–≥ –∞–≤—Ç–æ—Ä–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ '
            '–ø—Ä–µ–¥–º–µ—Ç–æ–≤. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ —Å –ø–æ–∫—É–ø–∫–æ–π –ë–ü ('
            '–∑–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∏–¥–µ–æ –Ω–∞ YouTube –∏ –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–æ–ª–∏–∫, –µ—Å–ª–∏ –Ω–µ '
            '–º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Discord).\n\n'
            '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –≤–ø—Ä–∞–≤–µ –¥–µ–ª–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø–æ —Å–≤–æ–µ–º—É —É—Å–º–æ—Ç—Ä–µ–Ω–∏—é '
            '–∏ –∑–∞—Å—á–∏—Ç—ã–≤–∞—Ç—å –ø–æ–∫—É–ø–∫–∏ –Ω–∞–ø–µ—Ä–µ–∫–æ—Ä –ø—Ä–∞–≤–∏–ª–∞–º.'
        ).set_image(url='https://cdn.discordapp.com/attachments/774698479981297664/835853888041123840/why.png'))

        message = await ctx.send(embed=embeds[0])
        page = Paginator(self.bot, message, only=ctx.author, embeds=embeds)
        await page.start()

    @Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
           self.bot.cogs_ready.ready_up("purchases_handler")


def setup(bot):
    bot.add_cog(PurchasesHandler(bot))
