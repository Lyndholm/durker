from datetime import datetime

from discord import Color, Embed, Forbidden, Member
from discord.ext.commands import Cog
from discord.utils import get
from loguru import logger

from ..db import db
from ..utils.constants import (AUDIT_LOG_CHANNEL, GOODBYE_CHANNEL,
                               MUTE_ROLE_ID, WELCOME_CHANNEL)
from ..utils.utils import (delete_user_from_db, dump_user_data_in_json,
                           insert_new_user_in_db)


class Welcome(Cog, name='Greetings'):
    def __init__(self, bot):
        self.bot = bot
        if self.bot.ready:
            bot.loop.create_task(self.init_vars())

    @logger.catch
    async def init_vars(self):
        self.mute_role = self.bot.guild.get_role(MUTE_ROLE_ID)

    @Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
            self.mute_role = self.bot.guild.get_role(MUTE_ROLE_ID)
            self.bot.cogs_ready.ready_up("welcome")


    @Cog.listener()
    @logger.catch
    async def on_member_update(self, before: Member, after: Member):
        if before.pending is True and after.pending is False:
            rec = db.fetchone(["user_id"], "mutes", "user_id", after.id)
            try:
                if rec is not None:
                    embed = Embed(
                        title="–ü–µ—Ä–µ–∑–∞—à—ë–ª, —á—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ –º—É—Ç?",
                        color=Color.random(),
                        description="**–•–∞-—Ö–∞. –ü–µ—Ä–µ–∑–∞—Ö–æ–¥ –Ω–µ —Å–ø–∞—Å–∞–µ—Ç –æ—Ç –º—É—Ç–∞.**"
                    )
                    await after.send(embed=embed)
                else:
                    embed = Embed(title=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", color=Color.orange(),
                    description = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, **{after.display_name}**! –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º —Ç–µ–±—è –≤ —Ñ–æ—Ä—Ç–Ω–∞–π—Ç–µ—Ä—Å–∫–æ–º –ª–æ–≥–æ–≤–µ —Å–∞–π—Ç–∞ [FORTNITEFUN.RU](https://fortnitefun.ru) üéâü§ó"
                    "\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∑–∞–≥–ª—è–Ω—É–ª –∫ –Ω–∞–º! –ú—ã —Ä–∞–¥—ã –∫–∞–∂–¥–æ–º—É –Ω–æ–≤–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É. "
                    "–ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–∞–∑–¥–µ–ª–æ–º '–î–ª—è –Ω–æ–≤–∏—á–∫–æ–≤'. "
                    "\n–í <#546409230127595544> —Ç—ã —É–∑–Ω–∞–µ—à—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∞ –≤ –∫–∞–Ω–∞–ª–µ <#860252229986025502> –Ω–∞–π–¥—ë—à—å –ø—Ä–∞–≤–∏–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–±–ª—é–¥–∞—Ç—å. "
                    "\n–í –∫–∞–Ω–∞–ª–µ <#547390000120070152> –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞, –∞ —Ç–∞–∫–∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏—Ö –ø–æ–ª—É—á–µ–Ω–∏—è.")

                    embed.add_field(name="–•–æ—á–µ—à—å –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å?", value="–ú–µ—Å—Ç–µ—á–∫–æ –¥–ª—è –æ–±—â–µ–Ω–∏—è –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–µ–º—ã: <#721480135043448954>", inline=False)
                    embed.add_field(name="–ò—â–µ—à—å –Ω–∞–ø–∞—Ä–Ω–∏–∫–∞ –¥–ª—è –∏–≥—Ä—ã?", value="–¢–µ–±–µ –≤ <#546416181871902730>", inline=False)
                    embed.add_field(name="–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã?", value="–ü–∏—à–∏ –≤ <#546700132390010882>", inline=False)
                    embed.add_field(name="–°–¥–µ–ª–∞–ª–∏ –ø–æ–∫—É–ø–∫—É —Å –Ω–∞—à–∏–º —Ç–µ–≥–æ–º?", value="–ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω –≤ <#546408250158088192>", inline=False)
                    embed.set_thumbnail(url=after.guild.icon_url)
                    embed.set_footer(text="–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –Ω–µ–≥–æ –Ω–µ –Ω—É–∂–Ω–æ.")
                    await after.send(embed=embed)

            except Forbidden:
                pass

            finally:
                embed = Embed(description=f"–ü—Ä–∏–≤–µ—Ç, **{after.display_name}** ({after.mention})!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä **{after.guild.name}** üéâü§ó!",
                            color=Color.green(), timestamp=datetime.utcnow())
                embed.set_author(name=f"–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", icon_url=f"{after.guild.icon_url}")
                await self.bot.get_channel(WELCOME_CHANNEL).send(embed=embed)

            if rec is None:
                await after.add_roles(get(after.guild.roles, name = '–ù–æ–≤–∏—á–æ–∫'))
            else:
                managed_roles = [r for r in after.roles if r.managed]
                await after.edit(roles=[self.mute_role] + managed_roles)

    @Cog.listener()
    @logger.catch
    async def on_member_join(self, member):
        await insert_new_user_in_db(self.bot.db, self.bot.pg_pool, member)

    @Cog.listener()
    @logger.catch
    async def on_member_remove(self, member):
        if member.pending is True:
            await delete_user_from_db(self.bot.pg_pool, member.id)
            embed = Embed(
                title='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä',
                color=Color.dark_red(),
                timestamp=datetime.utcnow(),
                description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{member.display_name}** ({member.mention}) –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª " \
                            "–ø—Ä–æ—Ü–µ—Å—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏, –Ω–µ –ø—Ä–∏–Ω—è–ª –ø—Ä–∞–≤–∏–ª–∞ –∏ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä."
                )
            await self.bot.get_channel(AUDIT_LOG_CHANNEL).send(embed=embed)

        else:
            await dump_user_data_in_json(self.bot.pg_pool, member)
            await delete_user_from_db(self.bot.pg_pool, member.id)

            embed = Embed(description=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{member.display_name}** ({member.mention}) –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä üòû",
                        color=Color.gold(), timestamp=datetime.utcnow())
            embed.set_author(name=f"–£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä", icon_url=f"{member.guild.icon_url}")

            await self.bot.get_channel(GOODBYE_CHANNEL).send(embed=embed)


def setup(bot):
    bot.add_cog(Welcome(bot))
