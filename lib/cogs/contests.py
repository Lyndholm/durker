from random import choice
from discord import Embed, Color
from discord.ext.commands import Cog
from discord.ext.commands import command, guild_only, is_owner
from datetime import datetime, timedelta

from ..utils.utils import load_commands_from_json

cmd = load_commands_from_json("contests")


class Contests(Cog):
    def __init__(self, bot):
        self.bot = bot
        self.giveaways = []

    @command(name=cmd["giveaway"]["name"], aliases=cmd["giveaway"]["aliases"], 
            brief=cmd["giveaway"]["brief"],
            description=cmd["giveaway"]["description"],
            usage=cmd["giveaway"]["usage"],
            help=cmd["giveaway"]["help"],
            hidden=cmd["giveaway"]["hidden"], enabled=True)
    @guild_only()
    @is_owner()
    async def create_giveaway(self, ctx, mins: int, *, description: str):
        await ctx.message.delete()

        embed = Embed(
            title="üéÅ –†–æ–∑—ã–≥—Ä—ã—à",
            description=description + "\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é ‚úÖ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ!",
            color=ctx.author.color,
            timestamp=datetime.utcnow()
        ).add_field(
            name=f"–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞",
            value=f"{datetime.now().strftime('%d.%m.%Y %H:%M:%S')} –ú–°–ö"
        ).add_field(
            name="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è",
            value=f"{(datetime.now() + timedelta(minutes=mins)).strftime('%d.%m.%Y %H:%M:%S')} –ú–°–ö"
        ).add_field(
            name="–ö—É—Ä–∞—Ç–æ—Ä",
            value=ctx.author.mention
        )

        message = await ctx.send(embed=embed)

        self.giveaways.append((message.channel.id, message.id))
        self.bot.scheduler.add_job(self.complete_giveaway, "date", run_date=datetime.now()+timedelta(minutes=mins),
                                args=[message.channel.id, message.id])
        await message.add_reaction('‚úÖ')

    async def complete_giveaway(self, channel_id, message_id):
        message = await self.bot.get_channel(channel_id).fetch_message(message_id)

        if len(entrants := [user for user in await message.reactions[0].users().flatten() if not user.bot]):
            winner = choice(entrants)
            await message.clear_reactions()
            await message.reply(f'üéÅ –†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à—ë–Ω.\nüéâ **–ü–æ–±–µ–¥–∏—Ç–µ–ª—å:** {winner.mention}')
            self.giveaways.remove((message.channel.id, message.id))
        else:
            await message.clear_reactions()
            await message.reply('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –ø–æ–¥–≤–µ–¥–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤. –†–æ–∑—ã–≥—Ä—ã—à –∑–∞–≤–µ—Ä—à—ë–Ω.')
            self.giveaways.remove((message.channel.id, message.id))

    @Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
           self.bot.cogs_ready.ready_up("contests")


def setup(bot):
    bot.add_cog(Contests(bot))
