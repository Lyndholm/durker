
from datetime import datetime

import discord
from discord.ext import commands

from ..db import db
from ..utils.exceptions import (InForbiddenTextChannel, InsufficientLevel,
                                NotInAllowedTextChannel)
from ..utils.utils import (cooldown_timer_str, get_command_required_level,
                           get_command_text_channels)


class CommandErrorHandler(commands.Cog, name='Command error handler'):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_command_error(self, ctx, exc):
        if ctx.command.has_error_handler():
            return

        if isinstance(exc, commands.CommandNotFound):
            embed = discord.Embed(
                title='‚ùó –û—à–∏–±–∫–∞!',
                description=f'–ö–æ–º–∞–Ω–¥–∞ `{ctx.message.clean_content}` –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.',
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False, delete_after=10)

        elif isinstance(exc, commands.CommandOnCooldown):
            embed = discord.Embed(
                title=f"{str(exc.cooldown.type).split('.')[-1]} cooldown",
                description=f"–ö–æ–º–∞–Ω–¥–∞ –Ω–∞ –æ—Ç–∫–∞—Ç–µ. –û–∂–∏–¥–∞–π—Ç–µ {cooldown_timer_str(exc.retry_after)}",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False, delete_after=15)

        elif isinstance(exc, commands.DisabledCommand):
            embed = discord.Embed(
                title='‚ùó –û—à–∏–±–∫–∞!',
                description=f"–ö–æ–º–∞–Ω–¥–∞ `{ctx.command}` –æ—Ç–∫–ª—é—á–µ–Ω–∞.",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False)

        elif isinstance(exc, commands.NoPrivateMessage):
            try:
                embed = discord.Embed(
                    title='‚ùó –û—à–∏–±–∫–∞!',
                    description=f"–ö–æ–º–∞–Ω–¥–∞ `{ctx.command}` –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=False)
            except discord.errors.HTTPException:
                pass

        elif isinstance(exc, commands.PrivateMessageOnly):
            embed = discord.Embed(
                title='‚ùó –û—à–∏–±–∫–∞!',
                description=f"–ö–æ–º–∞–Ω–¥–∞ `{ctx.command}` —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö. –û–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False, delete_after=15)

        elif isinstance(exc, commands.MissingPermissions):
            embed = discord.Embed(
                title='‚ùó MissingPermissions',
                description=f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False, delete_after=15)

        elif isinstance(exc, discord.errors.Forbidden):
            embed = discord.Embed(
                title='‚ùó Forbidden',
                description=f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False, delete_after=15)

        elif isinstance(exc, discord.errors.HTTPException):
            embed = discord.Embed(
                title='‚ùó –û—à–∏–±–∫–∞!',
                description=f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤ "
                            "–∏–ª–∏ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –±–æ–ª—å—à–µ 8 –ú–ë.",
                color=discord.Color.red()
            )
            await ctx.send(embed=embed)

        elif isinstance(exc, commands.MaxConcurrencyReached):
            embed = discord.Embed(
                title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!',
                description=f"–ö–æ–º–∞–Ω–¥–∞ `{ctx.command}` —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞.",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False)

        elif isinstance(exc, commands.EmojiNotFound):
            embed = discord.Embed(
                title='‚ùó –û—à–∏–±–∫–∞!',
                description='–£–∫–∞–∑–∞–Ω–Ω—ã–µ —ç–º–æ–¥–∑–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. '
                            '–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —É–∫–∞–∑–∞–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–º–æ–¥–∑–∏ –∏–ª–∏ —ç–º–æ–¥–∑–∏, '
                            '–∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.',
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False)

        elif isinstance(exc, commands.MissingRequiredArgument):
            if str(ctx.command) == 'knb':
                embed = discord.Embed(
                    title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!',
                    description=f'–£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã –≤—ã–±—Ä–∞–ª–∏: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥—É.\n' \
                                f'`{ctx.command.usage}`',
                    color=discord.Color.red()
                )
                await ctx.send(embed=embed, delete_after=15)
            elif str(ctx.command) == '8ball':
                embed = discord.Embed(
                    title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!',
                    description=f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–æ–ø—Ä–æ—Å.",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=False, delete_after=15)
            elif str(ctx.command) == 'randint':
                embed = discord.Embed(
                    title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!',
                    description=f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω **—Ü–µ–ª—ã—Ö** —á–∏—Å–µ–ª.",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=False, delete_after=15)
            else:
                embed = discord.Embed(
                    title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!',
                    description=f"–ü—Ä–æ–ø—É—â–µ–Ω –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –≤ help –º–µ–Ω—é.",
                    color=discord.Color.red()
                )
                await ctx.reply(embed=embed, mention_author=False)

        elif isinstance(exc, InsufficientLevel):
            level = await get_command_required_level(ctx.command)
            member_level = db.fetchone(['level'], 'leveling', 'user_id', ctx.author.id)[0]
            embed = discord.Embed(
                title='üîí –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å!',
                description=f"–ö–æ–º–∞–Ω–¥–∞ `{ctx.command.name}` —Ç—Ä–µ–±—É–µ—Ç –Ω–∞–ª–∏—á–∏—è **{level}** —É—Ä–æ–≤–Ω—è " \
                            f"–∏ –≤—ã—à–µ.\n–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: **{member_level}**.",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False)

        elif isinstance(exc, NotInAllowedTextChannel) or isinstance(exc, InForbiddenTextChannel):
            txt = await get_command_text_channels(ctx.command)
            embed = discord.Embed(
                title='‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª!',
                description=f"–ö–æ–º–∞–Ω–¥–∞ `{ctx.command.name}` {txt.lower()}",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False)

        elif isinstance(exc, commands.CheckFailure) or isinstance(exc, commands.CheckAnyFailure):
            embed = discord.Embed(
                title='‚ùó –û—à–∏–±–∫–∞!',
                description=f"{ctx.author.mention}\n–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É."
                            "\n–í–æ–∑–º–æ–∂–Ω–æ, —É –≤–∞—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞.",
                color=discord.Color.red()
            )
            await ctx.reply(embed=embed, mention_author=False, delete_after=15)

        else:
            try:
                if hasattr(ctx.command, 'on_error'):
                    embed = discord.Embed(
                        title="Error.",
                        description="Something went wrong, an error occured.\nCheck logs.",
                        timestamp=datetime.utcnow(),
                        color=discord.Color.red()
                    )
                    await self.bot.logs_channel.send(embed=embed)
                else:
                    embed = discord.Embed(
                        title=f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã {ctx.command}.',
                        description=f'`{ctx.command.signature if ctx.command.signature else None}`\n{exc}',
                        color=discord.Color.red(),
                        timestamp=datetime.utcnow()
                    )
                    if isinstance(ctx.channel, discord.DMChannel):
                        embed.add_field(name="Additional info:", value="Exception occured in DMChannel.")
                    await self.bot.logs_channel.send(embed=embed)
            except:
                embed = discord.Embed(
                    title=f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã {ctx.command}.',
                    description=f'`{ctx.command.signature if ctx.command.signature else None}`\n{exc}',
                    color=discord.Color.red(),
                    timestamp=datetime.utcnow()
                )
                if isinstance(ctx.channel, discord.DMChannel):
                    embed.add_field(name="Additional info:", value="Exception occured in DMChannel.")
                await self.bot.logs_channel.send(embed=embed)
            finally:
                raise exc

    @commands.Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
           self.bot.cogs_ready.ready_up("error_handler")


async def setup(bot):
    await bot.add_cog(CommandErrorHandler(bot))
