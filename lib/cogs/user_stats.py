import ast
from asyncio.exceptions import TimeoutError
from datetime import datetime, timedelta
from typing import Optional
from random import randint
from discord import Color, Embed, Member
from discord.ext.commands import BucketType, Cog, command, cooldown, guild_only
from discord.utils import get
from loguru import logger

from ..db import db
from ..utils.checks import is_channel
from ..utils.constants import STATS_CHANNEL
from ..utils.utils import (get_context_target, joined_date,
                           load_commands_from_json, russian_plural)

cmd = load_commands_from_json("user_stats")


class UserStats(Cog, name='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'):
    def __init__(self, bot):
        self.bot = bot

    @Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
            self.bot.cogs_ready.ready_up("user_stats")

    @command(name=cmd["profile"]["name"], aliases=cmd["profile"]["aliases"],
             brief=cmd["profile"]["brief"],
             description=cmd["profile"]["description"],
             usage=cmd["profile"]["usage"],
             help=cmd["profile"]["help"],
             hidden=cmd["profile"]["hidden"], enabled=True)
    @is_channel(STATS_CHANNEL)
    @guild_only()
    @logger.catch
    async def fetch_member_profile_command(self, ctx, *, member: Optional[Member]):
        target = await get_context_target(self.bot.pg_pool, ctx, member)
        if not target:
            return

        biography = await self.bot.pg_pool.fetchval(
            'SELECT brief_biography FROM users_info WHERE user_id = $1', target.id)

        user_stats = await self.bot.db.fetchone(
            ['achievements_list', 'invoice_time'],
            'users_stats', 'user_id',
            target.id)

        durka_stats = await self.bot.db.fetchone(
            ['received_durka_calls'],
            'durka_stats', 'user_id',
            target.id)

        moderation_stats = await self.bot.db.fetchone(
            ['mutes_story', 'warns_story', 'profanity_triggers'],
            'users_stats', 'user_id',
            target.id)

        mutes = ast.literal_eval(moderation_stats[0])
        mutes = mutes['user_mute_story']
        mute_time = sum(
            mutes[i]['mute_time']
            for i in range(len(mutes))
        )
        warns = ast.literal_eval(moderation_stats[1])
        warns = warns['user_warn_story']
        warn_time = sum(
            warns[i]['mute_time']
            for i in range(len(warns))
        )
        total_mute_time = mute_time + warn_time
        joined = await joined_date(self.bot.pg_pool, target)
        embed = Embed(color=target.color)
        embed.set_author(name=target.display_name, icon_url=target.avatar_url)
        embed.set_thumbnail(url=target.avatar_url)

        if member:
            if biography:
                value = biography
            else:
                value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–ª —Å–≤–æ—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é.'
            embed.add_field(name='üìù –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:',
                            value=value, inline=False)
        else:
            if biography:
                value = biography
            else:
                value = f'No biography moment'
            embed.add_field(name='üìù –û —Å–µ–±–µ:', value=value, inline=False)

        embed.add_field(name='üìÜ –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:',
                        value='Vchera (eto tochno)',
                        inline=True)

        embed.add_field(name='üìÜ –î–∞—Ç–∞ –∑–∞—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:',
                        value='Zavtra (toje tochno)',
                        inline=True)

        embed.add_field(name='üìÜ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:',
                        value=randint(-9999999, -1),
                        inline=True)

        if len(target.roles) > 1:
            embed.add_field(name=f'üòÄ –†–æ–ª–∏ ({randint(1, 9999999)})',
                            value=ctx.guild.default_role.mention,
                            inline=False)
        else:
            embed.add_field(name=f'üòÄ –†–æ–ª–∏ ({randint(1, 9999999)})',
                            value=ctx.guild.default_role.mention,
                            inline=False)

        embed.add_field(name='üòé –ù–∞–∏–≤—ã—Å—à–∞—è —Ä–æ–ª—å:',
                        value='BAN ROLE',
                        inline=True)

        embed.add_field(name='üéñÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:',
                        value=randint(1, 9999999),
                        inline=True)

        embed.add_field(name="‚ö° –ë—É—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞:",
                        value='May bit',
                        inline=True)

        embed.add_field(name="<:durka:684794973358522426>  –ü–æ–ª—É—á–µ–Ω–æ –ø—É—Ç—ë–≤–æ–∫ –≤ –¥—É—Ä–∫—É:",
                        value=randint(1, 9999999),
                        inline=True)

        embed.add_field(name="ü§¨ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –º–∞—Ç-—Ñ–∏–ª—å—Ç—Ä–∞:",
                        value=randint(100, 9999999),
                        inline=True)

        embed.add_field(name="üîà –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–µ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö:",
                        value='pchel, no voice time for u',
                        inline=True)

        embed.add_field(name="‚ö†Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:",
                        value='3 (skoro ban (no eto ne tochno))',
                        inline=True)

        embed.add_field(name="üôä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º—É—Ç–æ–≤:",
                        value=randint(1, 99999),
                        inline=True)

        embed.add_field(name="‚è≤Ô∏è –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–µ –≤ –º—É—Ç–µ:",
                        value='‚àû',
                        inline=True)

        if member:
            embed.timestamp = datetime.utcnow()
            embed.set_footer(
                text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç: {ctx.author}", icon_url=ctx.author.avatar_url)
        else:
            embed.set_footer(text='–î–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã –Ω–∞ Zavtra')

        await ctx.reply(embed=embed, mention_author=False)

    @command(name=cmd["setbio"]["name"], aliases=cmd["setbio"]["aliases"],
        brief=cmd["setbio"]["brief"],
        description=cmd["setbio"]["description"],
        usage=cmd["setbio"]["usage"],
        help=cmd["setbio"]["help"],
        hidden=cmd["setbio"]["hidden"], enabled=True)
    @is_channel(STATS_CHANNEL)
    @guild_only()
    @cooldown(cmd["setbio"]["cooldown_rate"], cmd["setbio"]["cooldown_per_second"], BucketType.member)
    @logger.catch
    async def setbio_command(self, ctx, *, bio: str = None):
        if bio is None:
            db_bio = db.fetchone(["brief_biography"], "users_info", "user_id", ctx.author.id)[0]

            if db_bio is not None:
                    r_list = ['üü©', 'üü•']
                    embed = Embed(title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!', color = Color.red(), timestamp = datetime.utcnow(),
                            description = f"{ctx.author.mention}, –≤–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è —É–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–∞. –í—ã –∂–µ–ª–∞–µ—Ç–µ –µ—ë —Å–±—Ä–æ—Å–∏—Ç—å?\n\n"
                            "üü© ‚Äî –Ω–µ—Ç.\n\nüü• ‚Äî –¥–∞, —Å–±—Ä–æ—Å–∏—Ç—å –º–æ—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é.")
                    msg = await ctx.reply(embed=embed, mention_author=False)

                    for r in r_list:
                        await msg.add_reaction(r)
                    try:
                        react, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=lambda react,
                                    user: user == ctx.author and react.message.channel == ctx.channel
                                    and react.emoji in r_list)

                    except TimeoutError:
                        await msg.clear_reactions()
                        embed = Embed(title="–í—Ä–µ–º—è –≤—ã—à–ª–æ", color=Color.magenta(), timestamp=datetime.utcnow(),
                                    description=f"{ctx.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –≤—ã–±–æ—Ä –≤—ã—à–ª–æ, –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
                        await msg.reply(embed=embed)
                        return


                    else:
                        if str(react.emoji) == r_list[0]:
                            embed = Embed(title=':white_check_mark: –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', color = Color.green(), timestamp = datetime.utcnow(),
                                        description = f"–°–±—Ä–æ—Å –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–º–µ–Ω—ë–Ω.\n"
                                        "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â—ë —Ä–∞–∑, —É–∫–∞–∑–∞–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–µ–∫—Å—Ç.\n"
                                        "**–ü—Ä–∏–º–µ—Ä:** +setbio –≠—Ç–æ –º–æ—è –Ω–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è!")
                            await ctx.reply(embed=embed, mention_author=False)
                            ctx.command.reset_cooldown(ctx)
                            return

                        if str(react.emoji) == r_list[1]:
                            db.execute("UPDATE users_info SET brief_biography = %s WHERE user_id = %s",
                            None, ctx.author.id)
                            db.commit()

                            embed = Embed(title=':white_check_mark: –í—ã–ø–æ–ª–Ω–µ–Ω–æ!', color = Color.green(), timestamp = datetime.utcnow(),
                                        description = f"–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author.display_name}** —Å–±—Ä–æ—à–µ–Ω–∞.")
                            await ctx.reply(embed=embed, mention_author=False)
                            ctx.command.reset_cooldown(ctx)
                            return
            else:
                embed = Embed(title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!', color = Color.red(),
                            description = f"{ctx.author.mention}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –í–∞—à—É –±–∏–æ–≥—Ä–∞—Ñ–∏—é. –£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ ‚Äî **255** —Å–∏–º–≤–æ–ª–æ–≤.")
                await ctx.reply(embed=embed, mention_author=False)
                ctx.command.reset_cooldown(ctx)

        elif len(bio.strip()) > 255:
            embed = Embed(title='‚ùó –í–Ω–∏–º–∞–Ω–∏–µ!', color = Color.red(),
                        description = f"{ctx.author.mention}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–º–µ–Ω—å—à–∏—Ç–µ –¥–ª–∏–Ω—É –í–∞—à–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏. –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –æ–±—ä—ë–º –Ω–∞ {len(bio) - 255} —Å–∏–º–≤–æ–ª(-–∞).")
            await ctx.reply(embed=embed, mention_author=False)

        else:
            bio = bio.replace('`', '`¬≠')
            try:
                db.execute("UPDATE users_info SET brief_biography = %s WHERE user_id = %s",
                            bio.strip(), ctx.author.id)
                db.commit()

                embed = Embed(title=':white_check_mark: –í—ã–ø–æ–ª–Ω–µ–Ω–æ!', color = Color.green(), timestamp = datetime.utcnow(),
                            description = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, **{ctx.author.display_name}**! –í–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞:\n```{bio}```")
                await ctx.reply(embed=embed, mention_author=False)

            except Exception as e:
                raise e


    @command(name=cmd["setprivacy"]["name"], aliases=cmd["setprivacy"]["aliases"],
        brief=cmd["setprivacy"]["brief"],
        description=cmd["setprivacy"]["description"],
        usage=cmd["setprivacy"]["usage"],
        help=cmd["setprivacy"]["help"],
        hidden=cmd["setprivacy"]["hidden"], enabled=True)
    @is_channel(STATS_CHANNEL)
    @guild_only()
    @logger.catch
    async def set_user_profile_privacy_command(self, ctx):
        r_list = ['üü©', 'üü•', '‚ùå']
        embed = Embed(
            color = Color.magenta(),
            description = f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è:\n\n"
                "üü© ‚Äî –û—Ç–∫—Ä—ã—Ç—ã–π, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –µ–≥–æ –º–æ–≥—É—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.\nüü• ‚Äî –ó–∞–∫—Ä—ã—Ç—ã–π, –ø—Ä–æ—Å–º–∞—Ç—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ –≤—ã."
                "\n\n‚ùå ‚Äî –≤—ã—Ö–æ–¥."
            )
        msg = await ctx.reply(embed=embed, mention_author=False)

        for r in r_list:
            await msg.add_reaction(r)
        try:
            react, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=lambda react,
                        user: user == ctx.author and react.message.channel == ctx.channel
                        and react.emoji in r_list)

        except TimeoutError:
            await msg.clear_reactions()
            embed = Embed(title="–í—Ä–µ–º—è –≤—ã—à–ª–æ", color=Color.magenta(), timestamp=datetime.utcnow(),
                        description=f"{ctx.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –≤—ã–±–æ—Ä –≤—ã—à–ª–æ, –¥–µ–π—Å–≤—Ç–∏–µ –æ–º–µ–Ω–µ–Ω–æ.")
            await msg.reply(embed=embed)
            return


        if str(react.emoji) == r_list[2]:
            await msg.delete()
            embed = Embed(
                title='‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ',
                —Åolor = Color.dark_red(),
                timestamp = datetime.utcnow()
            )
            await ctx.message.reply(embed=embed)
            return

        if str(react.emoji) == r_list[0]:
            await msg.clear_reactions()

            db.execute("UPDATE users_info SET is_profile_public = %s WHERE user_id = %s",
                    True, ctx.author.id)
            db.commit()

            embed = Embed(
                title=':white_check_mark: –í—ã–ø–æ–ª–Ω–µ–Ω–æ!',
                color = Color.green(),
                timestamp = datetime.utcnow(),
                description = f"**{ctx.author.display_name}**, –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.\n–¢–∏–ø –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è: **–û—Ç–∫—Ä—ã—Ç—ã–π**"
            )
            await msg.edit(embed=embed)
            return

        elif str(react.emoji) == r_list[1]:
            await msg.clear_reactions()

            db.execute("UPDATE users_info SET is_profile_public = %s WHERE user_id = %s",
                    False, ctx.author.id)
            db.commit()

            embed = Embed(
                title=':white_check_mark: –í—ã–ø–æ–ª–Ω–µ–Ω–æ!',
                color = Color.red(),
                timestamp = datetime.utcnow(),
                description = f"**{ctx.author.display_name}**, –≤–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.\n–¢–∏–ø –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è: **–ó–∞–∫—Ä—ã—Ç—ã–π**"
            )
            await msg.edit(embed=embed)


    @command(name=cmd["amount"]["name"], aliases=cmd["amount"]["aliases"],
        brief=cmd["amount"]["brief"],
        description=cmd["amount"]["description"],
        usage=cmd["amount"]["usage"],
        help=cmd["amount"]["help"],
        hidden=cmd["amount"]["hidden"], enabled=True)
    @is_channel(STATS_CHANNEL)
    @guild_only()
    @logger.catch
    async def amount_command(self, ctx, *, member: Optional[Member]):
        target = await get_context_target(self.bot.pg_pool, ctx, member)
        if not target:
            return

        activity_role_1 = get(ctx.guild.roles, name='–†–∞–±–æ—Ç—è–≥–∞')
        activity_role_2 = get(ctx.guild.roles, name='–û–ª–¥')
        activity_role_3 = get(ctx.guild.roles, name='–ö–∞–ø–∏—Ç–∞–Ω')
        activity_role_4 = get(ctx.guild.roles, name='–í–µ—Ç–µ—Ä–∞–Ω')
        joined = await joined_date(self.bot.pg_pool, target)
        msg_counter = randint(0, 999999999)
        rnd = randint(1, 500)

        desc = f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: **{msg_counter}**'

        embed = Embed(color=target.color)
        embed.set_author(name=target.display_name, icon_url=target.avatar_url)
        embed.set_thumbnail(url="https://antislang.ru/wp-content/uploads/bruh-4.jpg")

        if activity_role_1 not in target.roles:
            desc += f"\n\n–î–æ —Ä–æ–ª–∏ {activity_role_1.mention} –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å **{750-rnd}** {russian_plural(750-rnd,['–∫–æ–º–ø–∏–ª—è—Ü–∏—é','–∫–æ–º–ø–∏–ª—è—Ü–∏–∏','–∫–æ–º–ø–∏–ª—è—Ü–∏–π'])} PYTHON BRUH EDITION 2.28"

        elif activity_role_2 not in target.roles:
            desc += f"\n\n–î–æ —Ä–æ–ª–∏ {activity_role_2.mention} –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å **{3_500-rnd}** {russian_plural(3_500-rnd,['–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é','–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏','–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π'])} c hashtag"

        elif activity_role_3 not in target.roles:
            desc += f"\n\n–î–æ —Ä–æ–ª–∏ {activity_role_3.mention} –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å **{10_000-rnd}** {russian_plural(10_000-rnd,['—Å–±–æ—Ä–∫—É','—Å–±–æ—Ä–∫–∏','—Å–±–æ—Ä–æ–∫'])} Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"

        elif activity_role_4 not in target.roles:
            desc += f"\n\n–î–æ —Ä–æ–ª–∏ {activity_role_4.mention} –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å **{25_000-rnd}** {russian_plural(25_000-rnd,['–¥–µ–ø–ª–æ–π','–¥–µ–ø–ª–æ—è','–¥–µ–ø–ª–æ–µ–≤'])} –≤ Kubernetes"

        embed.description = desc
        await ctx.reply(embed=embed, mention_author=False)


    @command(name=cmd["rep"]["name"], aliases=cmd["rep"]["aliases"],
        brief=cmd["rep"]["brief"],
        description=cmd["rep"]["description"],
        usage=cmd["rep"]["usage"],
        help=cmd["rep"]["help"],
        hidden=cmd["rep"]["hidden"], enabled=True)
    @is_channel(STATS_CHANNEL)
    @guild_only()
    @logger.catch
    async def reputation_command(self, ctx, *, member: Optional[Member]):
        target = await get_context_target(self.bot.pg_pool, ctx, member)
        if not target:
            return

        rep_rank, lost_rep = randint(1, 9999999), randint(1, 9999999)
        desc = f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏: **{rep_rank}**\n' \
               f'–ü–æ—Ç–µ—Ä—è–Ω–æ –æ—á–∫–æ–≤ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏: **{lost_rep}**'

        embed = Embed(color=target.color)
        embed.set_author(name=target.display_name, icon_url=target.avatar_url)
        if rep_rank <= 0:
            desc += f"\n\n–†–∞–Ω–≥: **–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298656462700634/no_rank.png")
        elif 1 <= rep_rank <= 1_499:
            desc += f"\n\n–†–∞–Ω–≥: **–ë—Ä–æ–Ω–∑–∞**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298685498949662/rank_bronze.png")
        elif 1_500 <= rep_rank <= 2_999:
            desc += f"\n\n–†–∞–Ω–≥: **–°–µ—Ä–µ–±—Ä–æ**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298847705792522/rank_silver.png")
        elif 3_000 <= rep_rank <= 4_499:
            desc += f"\n\n–†–∞–Ω–≥: **–ó–æ–ª–æ—Ç–æ**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298881285652550/rank_gold.png")
        elif 4_500 <= rep_rank <= 6_999:
            desc += f"\n\n–†–∞–Ω–≥: **–ü–ª–∞—Ç–∏–Ω–∞**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298909161259028/rank_platinum.png")
        elif 7_000 <= rep_rank <= 9_999:
            desc += f"\n\n–†–∞–Ω–≥: **–ê–ª–º–∞–∑**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298936734220349/rank_diamond.png")
        elif 10_000 <= rep_rank <= 14_999:
            desc += f"\n\n–†–∞–Ω–≥: **–ú–∞—Å—Ç–µ—Ä**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298973065543680/rank_master.png")
        elif 15_000 <= rep_rank <= 19_999:
            desc += f"\n\n–†–∞–Ω–≥: **–≠–ª–∏—Ç–∞**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815298996959445042/rank_grandmaster.png")
        elif rep_rank > 20_000:
            desc += f"\n\n–†–∞–Ω–≥: **–°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ**"
            embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815299017948004402/rank_perfection.png")

        embed.description = desc
        await ctx.reply(embed=embed, mention_author=False)


    @command(name=cmd["repinfo"]["name"], aliases=cmd["repinfo"]["aliases"],
        brief=cmd["repinfo"]["brief"],
        description=cmd["repinfo"]["description"],
        usage=cmd["repinfo"]["usage"],
        help=cmd["repinfo"]["help"],
        hidden=cmd["repinfo"]["hidden"], enabled=True)
    @guild_only()
    @logger.catch
    async def how_rep_sys_works_command(self, ctx):
        embed = Embed(
            title="–†–µ–ø—É—Ç–∞—Ü–∏—è: —á—Ç–æ —ç—Ç–æ, –¥–ª—è —á–µ–≥–æ –Ω—É–∂–Ω–∞, –∫–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.",
            color=ctx.author.color,
            description="–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏.\n"
            "–£ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –µ—Å—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —Ä–µ–ø—É—Ç–∞—Ü–∏–∏. "
            "–†–µ–ø—É—Ç–∞—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è; –µ–≥–æ –º–∞–Ω–µ—Ä—É –æ–±—â–µ–Ω–∏—è –∏ —Ç–æ, –∫–∞–∫ –æ–Ω —Å–æ–±–ª—é–¥–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞."
            "\n\n–†–µ–ø—É—Ç–∞—Ü–∏—é –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏, –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–µ:"
            "\n‚Äî –ê–∫—Ç–∏–≤–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ\n‚Äî –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π\n‚Äî –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π | `+achievements`\n‚Äî –ü–æ–≤—ã—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è | `+rank`"
            "\n\n–†–µ–ø—É—Ç–∞—Ü–∏—é –º–æ–∂–Ω–æ –∏ –ø–æ—Ç–µ—Ä—è—Ç—å. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏, –º—É—Ç—ã, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —É–º–µ–Ω—å—à–∞—é—Ç —É—Ä–æ–≤–µ–Ω—å —Ä–µ–ø—É—Ç–∞—Ü–∏–∏."
            "\n\n–í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –º–µ–Ω—è–µ—Ç—Å—è —Ä–∞–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–∞."
            " –°—É—â–µ—Å—Ç–≤—É—é—Ç 8 —Ä–∞–Ω–≥–æ–≤ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏:"
            "\n‚Äî **–ë—Ä–æ–Ω–∑–∞** (1 - 1499)"
            "\n‚Äî **–°–µ—Ä–µ–±—Ä–æ** (1500 - 2999)"
            "\n‚Äî **–ó–æ–ª–æ—Ç–æ** (3000 - 4499)"
            "\n‚Äî **–ü–ª–∞—Ç–∏–Ω–∞** (4500 - 6999)"
            "\n‚Äî **–ê–ª–º–∞–∑** (7000 - 9999)"
            "\n‚Äî **–ú–∞—Å—Ç–µ—Ä** (10000 - 14999)"
            "\n‚Äî **–≠–ª–∏—Ç–∞** (15000 - 19999)"
            "\n‚Äî **–°–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ** (20000 –∏ –±–æ–ª—å—à–µ)"
            f"\n\n–£–∑–Ω–∞—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ `{ctx.prefix or self.bot.PREFIX[0]}rep`"
        )
        embed.set_thumbnail(url="https://cdn.discordapp.com/attachments/774698479981297664/815282991668133888/reputation.png")
        await ctx.reply(embed=embed, mention_author=False)


def setup(bot):
    bot.add_cog(UserStats(bot))
