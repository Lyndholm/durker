from discord import Member, Embed, Color
from discord.ext.commands import Cog
from discord.ext.commands import command, guild_only
from datetime import datetime, timedelta
from asyncio.exceptions import TimeoutError

from ..db import db
from ..utils.utils import load_commands_from_json


cmd = load_commands_from_json("user_stats")


class UserStats(Cog):
    def __init__(self, bot):
        self.bot = bot


    @command(name=cmd["profile"]["name"], aliases=cmd["profile"]["aliases"], 
        brief=cmd["profile"]["brief"],
        description=cmd["profile"]["description"],
        usage=cmd["profile"]["usage"],
        help=cmd["profile"]["help"],
        hidden=cmd["profile"]["hidden"], enabled=True)
    @guild_only()
    async def fetch_member_profile_command(self, ctx, member: Member = None):
        if member:
            is_member_profile_public = db.fetchone(["is_profile_public"], "users_info", "user_id", member.id)
            if is_member_profile_public[0] is False:
                embed = Embed(title=":exclamation: –í–Ω–∏–º–∞–Ω–∏–µ!", color=Color.red(), timestamp=datetime.utcnow(),
                            description=f"–ü—Ä–æ—Ñ–∏–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ **{member.display_name}** ({member.mention}) —Å–∫—Ä—ã—Ç. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –µ–≥–æ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —Ö–æ–∑—è–∏–Ω.")
                embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç: {ctx.author}")
                await ctx.send(embed=embed)
                return
            else:
                target = member
        else:
            target = ctx.author


        casino = db.fetchone(["cash", "e_cash"], "casino", 'user_id', target.id)

        durka_stats = db.fetchone(["received_durka_calls"], "durka_stats", 'user_id', target.id)

        leveling = db.fetchone(["level", "xp"], "leveling", 'user_id', target.id)

        biography = db.fetchone(["brief_biography"], "users_info", 'user_id', target.id)

        purchases = db.fetchone(["purchases"], "users_stats", 'user_id', target.id)
 
        user_stats = db.fetchone(["achievements_list", "messages_count", "rep_rank", "invoice_time", "lost_reputation"], 
                                "users_stats", 'user_id', target.id)

        moderation_stats = db.fetchone(["mutes_story", "warns_story", "profanity_triggers"], 
                                    "users_stats", 'user_id', target.id)

        total_mute_time = sum(moderation_stats[0]['user_mute_story'][i]['mute_time'] for i in range(len(moderation_stats[0]['user_mute_story'])))

        vbucks_count = sum(purchases[0]['vbucks_purchases'][i]['price'] for i in range(len(purchases[0]['vbucks_purchases'])))

        realMoney = sum(purchases[0]['realMoney_purchases'][i]['price_in_rubles'] for i in range(len(purchases[0]['realMoney_purchases'])))

        kapitalist = ctx.guild.get_role(730017005029294121)

        magnat = ctx.guild.get_role(774686818356428841)

        embed = Embed(color=target.color)

        embed.set_author(name=f"{target.display_name}", icon_url=target.avatar_url)

        embed.set_thumbnail(url=target.avatar_url)

        if member:
            embed.add_field(name=':pencil: –û –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', value=biography[0] if biography[0] else "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–∫–∞–∑–∞–ª —Å–≤–æ—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é.",
                            inline=False)
        else:
            embed.add_field(name=':pencil: –û —Å–µ–±–µ:', value=biography[0] if biography[0] else "–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –æ —Å–µ–±–µ. "
                                                                                            "–°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ `_setbio <–≤–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è>`",
                            inline=False)

        embed.add_field(name=':calendar: –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:', value=target.created_at.strftime("%d.%m.%Y %H:%M"),
                        inline=True)

        embed.add_field(name=':calendar_spiral: –î–∞—Ç–∞ –∑–∞—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:',
                        value=target.joined_at.strftime("%d.%m.%Y %H:%M"), inline=True)

        embed.add_field(name=':calendar_spiral: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:',
                        value=(datetime.now() - target.joined_at).days, inline=True)

        embed.add_field(name=f":grinning: –†–æ–ª–∏ ({len(target.roles) - 1})",
                        value=" ".join([role.mention for role in target.roles[1:]]), inline=True)

        embed.add_field(name=":sunglasses: –ù–∞–∏–≤—ã—Å—à–∞—è —Ä–æ–ª—å:", value=target.top_role.mention, inline=True)

        embed.add_field(name=":military_medal: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:", value=len(user_stats[0]["user_achievements_list"]), inline=True)

        embed.add_field(name=":envelope: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π:", value=user_stats[1], inline=True)

        embed.add_field(name=":green_circle: –£—Ä–æ–≤–µ–Ω—å:", value=leveling[0], inline=True)

        embed.add_field(name=":green_circle: XP:", value=leveling[1], inline=True)

        embed.add_field(name=":face_with_monocle: –†–µ–ø—É—Ç–∞—Ü–∏—è:", value=user_stats[2], inline=True)

        embed.add_field(name=":thumbsdown: –ü–æ—Ç–µ—Ä—è–Ω–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏:", value=user_stats[4], inline=True)

        embed.add_field(name="<:durka:745936793148588083>  –ü–æ–ª—É—á–µ–Ω–æ –ø—É—Ç—ë–≤–æ–∫ –≤ –¥—É—Ä–∫—É:", value=durka_stats[0],
                        inline=True)

        embed.add_field(name=":face_with_symbols_over_mouth: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –º–∞—Ç-—Ñ–∏–ª—å—Ç—Ä–∞:", value=len(moderation_stats[2]["user_profanity_story"]),
                        inline=True)

        embed.add_field(name=":moneybag:  –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –≤-–±–∞–∫—Å–æ–≤ —Å —Ç–µ–≥–æ–º FNFUN:",
                        value=vbucks_count, inline=True)

        if len(purchases[0]['vbucks_purchases']) > 0:

            embed.add_field(name=":slight_smile: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫ —Å —Ç–µ–≥–æ–º FNFUN:",
                            value=len(purchases[0]['vbucks_purchases']), inline=True)

            embed.add_field(name=":date: –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∫—É–ø–∫–∏ —Å —Ç–µ–≥–æ–º FNFUN:",
                            value=purchases[0]['vbucks_purchases'][-1]['date'].strftime("%d.%m.%Y %H:%M"))

        if len(purchases[0]['realMoney_purchases']) > 0:
            embed.add_field(name=":money_with_wings: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–≤—Ç–æ—Ä–∞ –≤ —Ä—É–±–ª—è—Ö:",
                            value=realMoney, inline=True)

        if kapitalist not in target.roles:
            embed.add_field(name=f":moneybag: –î–æ —Ä–æ–ª–∏ `{kapitalist.name}` –æ—Å—Ç–∞–ª–æ—Å—å: ",
                            value=f"{int(10000 - vbucks_count)} –≤-–±–∞–∫—Å–æ–≤", inline=True)

        if magnat not in target.roles and kapitalist in target.roles:
            embed.add_field(name=f":moneybag: –î–æ —Ä–æ–ª–∏ `{magnat.name}` –æ—Å—Ç–∞–ª–æ—Å—å: ",
                            value=f"{int(25000 - vbucks_count)} –≤-–±–∞–∫—Å–æ–≤", inline=True)

        embed.add_field(name=":speaker: –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–µ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö:",
                        value=timedelta(seconds=user_stats[4]), inline=True)

        embed.add_field(name=":coin: FUN-–∫–æ–∏–Ω–æ–≤:", value=casino[0] + casino[1], inline=True)

        embed.add_field(name=":warning: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:", value=len(moderation_stats[1]["user_warn_story"]), inline=True)

        embed.add_field(name=":speak_no_evil: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º—É—Ç–æ–≤:", value=len(moderation_stats[0]["user_mute_story"]), inline=True)

        embed.add_field(name=":timer: –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–µ –≤ –º—É—Ç–µ:", value=timedelta(seconds=total_mute_time),
                        inline=True)

        embed.add_field(name=":zap: –ë—É—Å—Ç–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞:", value='–î–∞' if bool(target.premium_since) else '–ù–µ—Ç',
                        inline=True)

        if member:
            embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç: {ctx.author}")
        else:
            embed.set_footer(text="–ö–∞—Ä—Ç–æ—á–∫–∞ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∞ " + datetime.now().strftime("%d.%m.%Y %H:%M:%S"))

        await ctx.send(embed=embed)

    
    @command(name=cmd["setbio"]["name"], aliases=cmd["setbio"]["aliases"], 
        brief=cmd["setbio"]["brief"],
        description=cmd["setbio"]["description"],
        usage=cmd["setbio"]["usage"],
        help=cmd["setbio"]["help"],
        hidden=cmd["setbio"]["hidden"], enabled=True)
    @guild_only()
    async def setbio_command(self, ctx, *, bio: str = None):
        if bio is None:
            db_bio = db.fetchone(["brief_biography"], "users_info", "user_id", ctx.author.id)[0]

            if db_bio is not None:
                    r_list = ['üü©', 'üü•']
                    embed = Embed(title=':exclamation: –í–Ω–∏–º–∞–Ω–∏–µ!', color = Color.red(), timestamp = datetime.utcnow(),
                            description = f"{ctx.author.mention}, –≤–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è —É–∂–µ –Ω–∞–ø–∏—Å–∞–Ω–∞. –í—ã –∂–µ–ª–∞–µ—Ç–µ –µ—ë —Å–±—Ä–æ—Å–∏—Ç—å?\n\n"
                            "üü© ‚Äî –Ω–µ—Ç.\n\nüü• ‚Äî –¥–∞, —Å–±—Ä–æ—Å–∏—Ç—å –º–æ—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é.")
                    msg = await ctx.send(embed=embed)

                    for r in r_list:
                        await msg.add_reaction(r)
                    try:
                        react, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=lambda react,
                                    user: user == ctx.author and react.message.channel == ctx.channel
                                    and react.emoji in r_list)

                    except TimeoutError:
                        await msg.clear_reactions()
                        embed = Embed(title="–í—Ä–µ–º—è –≤—ã—à–ª–æ", color=Color.magenta(), timestamp=datetime.utcnow(),
                                    description=f"{ctx.author.mention}, –≤—Ä–µ–º—è –Ω–∞ –≤—ã–±–æ—Ä –≤—ã—à–ª–æ, –¥–µ–π—Å–≤—Ç–∏–µ –æ–º–µ–Ω–µ–Ω–æ.")
                        await msg.reply(embed=embed)
                        return
                        
                    
                    else:
                        if str(react.emoji) == r_list[0]:
                            embed = Embed(title=':white_check_mark: –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ', color = Color.green(), timestamp = datetime.utcnow(),
                                        description = f"–°–±—Ä–æ—Å –±–∏–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–º–µ–Ω—ë–Ω.\n"
                                        "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –±–∏–æ–≥—Ä–∞—Ñ–∏—é, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –µ—â—ë —Ä–∞–∑, —É–∫–∞–∑–∞–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–µ–∫—Å—Ç.\n"
                                        "**–ü—Ä–∏–º–µ—Ä:** +setbio –≠—Ç–æ –º–æ—è –Ω–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è!")
                            await ctx.send(embed=embed)
                            return

                        if str(react.emoji) == r_list[1]:
                            db.execute("UPDATE users_info SET brief_biography = %s WHERE user_id = %s",
                            None, ctx.author.id)
                            db.commit()

                            embed = Embed(title=':white_check_mark: –í—ã–ø–æ–ª–Ω–µ–Ω–æ!', color = Color.green(), timestamp = datetime.utcnow(),
                                        description = f"–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author.display_name}** —Å–±—Ä–æ—à–µ–Ω–∞.")
                            await ctx.send(embed=embed)
                            return
            else:
                embed = Embed(title=':exclamation: –í–Ω–∏–º–∞–Ω–∏–µ!', color = Color.red(),
                            description = f"{ctx.author.mention}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –í–∞—à—É –±–∏–æ–≥—Ä–∞—Ñ–∏—é. –£—á–∏—Ç—ã–≤–∞–π—Ç–µ, —á—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ ‚Äî **255** —Å–∏–º–≤–æ–ª–æ–≤.")
                await ctx.send(embed=embed)

        elif len(bio.strip()) > 255:
            embed = Embed(title=':exclamation: –í–Ω–∏–º–∞–Ω–∏–µ!', color = Color.red(),
                        description = f"{ctx.author.mention}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–º–µ–Ω—å—à–∏—Ç–µ –¥–ª–∏–Ω—É –í–∞—à–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏. –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã–π –æ–±—ä—ë–º –Ω–∞ {len(bio) - 255} —Å–∏–º–≤–æ–ª(-–∞).")
            await ctx.send(embed=embed)

        else:
            bio = bio.replace('`', '`¬≠')
            try:
                db.execute("UPDATE users_info SET brief_biography = %s WHERE user_id = %s",
                            bio.strip(), ctx.author.id)
                db.commit()

                embed = Embed(title=':white_check_mark: –í—ã–ø–æ–ª–Ω–µ–Ω–æ!', color = Color.green(), timestamp = datetime.utcnow(),
                            description = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, **{ctx.author.display_name}**! –í–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞:\n```{bio}```")
                await ctx.send(embed=embed)

            except Exception as e:
                raise e


    @Cog.listener()
    async def on_ready(self):
        if not self.bot.ready:
           self.bot.cogs_ready.ready_up("user_stats")


def setup(bot):
    bot.add_cog(UserStats(bot))
